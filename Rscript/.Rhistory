# in order to process both replicates, RHH001 - RHH008 represent KO0h, KO9h, KO12h, KO24h, WT0h, WT9h, WT12h, WT24h.
library(dplyr)
library(ggplot2)
library(RColorBrewer)
All.Genes <- read.table("E:/P53AnalysisByJK/CommonRef/gencode.v29.primary_assembly.annotation_UCSC_names.gtf.gene.bed")[, c(6:7)]
mark.genes <- c("BBC3", "GADD45A", "BTG2", "CDKN1A", "SFN", "CCNB1", "PLK2", "RRM2B", "MDM2", "BAX", "DDB2")
Target.Dir <- "E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep2/TransformedRawGeneResult/"
samples <- read.table(paste0(Target.Dir, "samples.txt"), header = T)
View(samples)
Count <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/RawGeneResult/AllGenes.txt", header = T) %>% setNames("GeneID")
View(Count)
View(All.Genes)
for( RHH in samples$LIB )
{
GeneResultFile = paste0(Target.Dir, RHH, ".genes.results")
FPKM = read.table(GeneResultFile, header=T)[,c(1, 7)] %>% setNames(c("GeneID", RHH))
Count = merge(FPKM, Count, all.x = T, all.y = T)
}
View(Count)
# WT Fold Change
WT.LIB.Vec <- c("RHH006", "RHH007", "RHH008")
WT.Control <- "RHH005"
KO.LIB.Vec <- c("RHH002", "RHH003", "RHH004")
KO.Control <- "RHH001"
for( LIB in WT.LIB.Vec )
{
Count[, paste0(LIB, "FCOver", WT.Control)] <- apply(Count, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[WT.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
for( LIB in KO.LIB.Vec )
{
Count[, paste0(LIB, "FCOver", KO.Control)] <- apply(Count, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[KO.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
Count[, 16] <- apply(Count, 1, function(x){
WT.MAX.FC <- max(abs(as.numeric(x[c("RHH006FCOverRHH005","RHH007FCOverRHH005","RHH008FCOverRHH005" )])))
return(WT.MAX.FC)
})
Count[, 17] <- apply(Count, 1, function(x){
KO.MAX.FC <- max(abs(as.numeric(x[c("RHH002FCOverRHH001","RHH003FCOverRHH001","RHH004FCOverRHH001" )])))
return(KO.MAX.FC)
})
names(Count)[16:17] <- c("MaxFCWT","MaxFCKO")
View(Count)
All.WT.KO.FC <- Count[, c(1, 16, 17)]
FPKM.1.WT.KO.FC <- (Count %>% filter(RHH001 >= 1 | RHH002 >= 1 | RHH003 >= 1 | RHH004 >= 1 | RHH005 >= 1 | RHH006 >= 1 | RHH007 >= 1 | RHH008 >= 1))[, c(1, 16, 17)]
FPKM.10.WT.KO.FC <- (Count %>% filter(RHH001 >= 10 | RHH002 >= 10 | RHH003 >= 10 | RHH004 >= 10 | RHH005 >= 10 | RHH006 >= 10 | RHH007 >= 10 | RHH008 >= 10))[, c(1, 16, 17)]
FPKM.1.WT.KO.FC.Sorted.By.WT <- FPKM.1.WT.KO.FC[rev(order(FPKM.1.WT.KO.FC$MaxFCWT)), ]
FPKM.10.WT.KO.FC.Sorted.By.WT <- FPKM.10.WT.KO.FC[rev(order(FPKM.10.WT.KO.FC$MaxFCWT)), ]
FPKM.1.WT.KO.FC.Sorted.By.WT[, 4] <- seq_len(nrow(FPKM.1.WT.KO.FC.Sorted.By.WT))
FPKM.10.WT.KO.FC.Sorted.By.WT[, 4] <- seq_len(nrow(FPKM.10.WT.KO.FC.Sorted.By.WT))
Count[, 17] <- apply(Count, 1, function(x){
KO.MAX.FC <- max(abs(as.numeric(x[c("RHH002FCOverRHH001","RHH003FCOverRHH001","RHH004FCOverRHH001" )])))
return(KO.MAX.FC)
})
names(Count)[16:17] <- c("MaxFCWT","MaxFCKO")
All.WT.KO.FC <- Count[, c(1, 16, 17)]
FPKM.1.WT.KO.FC <- (Count %>% filter(RHH001 >= 1 | RHH002 >= 1 | RHH003 >= 1 | RHH004 >= 1 | RHH005 >= 1 | RHH006 >= 1 | RHH007 >= 1 | RHH008 >= 1))[, c(1, 16, 17)]
FPKM.10.WT.KO.FC <- (Count %>% filter(RHH001 >= 10 | RHH002 >= 10 | RHH003 >= 10 | RHH004 >= 10 | RHH005 >= 10 | RHH006 >= 10 | RHH007 >= 10 | RHH008 >= 10))[, c(1, 16, 17)]
FPKM.1.WT.KO.FC.Sorted.By.WT <- FPKM.1.WT.KO.FC[rev(order(FPKM.1.WT.KO.FC$MaxFCWT)), ]
FPKM.10.WT.KO.FC.Sorted.By.WT <- FPKM.10.WT.KO.FC[rev(order(FPKM.10.WT.KO.FC$MaxFCWT)), ]
FPKM.1.WT.KO.FC.Sorted.By.WT[, 4] <- seq_len(nrow(FPKM.1.WT.KO.FC.Sorted.By.WT))
FPKM.10.WT.KO.FC.Sorted.By.WT[, 4] <- seq_len(nrow(FPKM.10.WT.KO.FC.Sorted.By.WT))
write.table(Count, paste0(Target.Dir,"GeneFPKMAndFoldChange.tsv"), row.names = F, col.names = T, quote = F, sep = "\t" )
write.table(FPKM.1.WT.KO.FC.Sorted.By.WT, paste0(Target.Dir, "FPKML1WTKOFCSortedByWTFC.tsv"), row.names = F, col.names = T, quote = F, sep = "\t" )
write.table(FPKM.10.WT.KO.FC.Sorted.By.WT, paste0(Target.Dir, "FPKML10WTKOFCSortedByWTFC.tsv"), row.names = F, col.names = T, quote = F, sep = "\t" )
#####
## Generate fold change table with 24h marked max fold change with time point.
samples <- read.table(paste0(Target.Dir,"samples.txt"), header = T)
Count <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/RawGeneResult/AllGenes.txt", header = T) %>% setNames("GeneID")
Count <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/RawGeneResult/AllGenes.txt", header = T) %>% setNames("GeneID")
for( RHH in samples$LIB )
{
GeneResultFile = paste0(Target.Dir, RHH, ".genes.results")
FPKM = read.table(GeneResultFile, header=T)[,c(1, 7)] %>% setNames(c("GeneID", RHH))
Count = merge(FPKM, Count, all.x = T, all.y = T)
}
# WT Fold Change
WT.LIB.Vec <- c("RHH006", "RHH007", "RHH008")
WT.Control <- "RHH005"
KO.LIB.Vec <- c("RHH002", "RHH003", "RHH004")
KO.Control <- "RHH001"
for( LIB in WT.LIB.Vec )
{
Count[, paste0(LIB, "FCOver", WT.Control)] <- apply(Count, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[WT.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
for( LIB in KO.LIB.Vec )
{
Count[, paste0(LIB, "FCOver", KO.Control)] <- apply(Count, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[KO.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
Count[, 16] <- apply(Count, 1, function(x){
WT.MAX.FC <- max(abs(as.numeric(x[c("RHH006FCOverRHH005","RHH007FCOverRHH005","RHH008FCOverRHH005" )])))
return(WT.MAX.FC)
})
Count[, 17] <- apply(Count, 1, function(x){
KO.MAX.FC <- max(abs(as.numeric(x[c("RHH002FCOverRHH001","RHH003FCOverRHH001","RHH004FCOverRHH001" )])))
return(KO.MAX.FC)
})
names(Count)[16:17] <- c("MaxFCWT","MaxFCKO")
for(i in seq_len(nrow(Count))){
Count[i, 18] <- which(abs(abs(Count[i, c("RHH006FCOverRHH005","RHH007FCOverRHH005","RHH008FCOverRHH005" )]) - Count[i, "MaxFCWT"]) <= 0.001)[1]
Count[i, 19] <- which(abs(abs(Count[i, c("RHH002FCOverRHH001","RHH003FCOverRHH001","RHH004FCOverRHH001" )]) - Count[i, "MaxFCKO"]) <= 0.001)[1]
}
names(Count)[18:19] <- c("MaxTimeWT", "MaxTimeKO")
All.WT.KO.FC <- Count[, c(1, 16, 17, 18, 19)]
FPKM.1.WT.KO.FC <- (Count %>% filter(RHH001 >= 1 | RHH002 >= 1 | RHH003 >= 1 | RHH004 >= 1 | RHH005 >= 1 | RHH006 >= 1 | RHH007 >= 1 | RHH008 >= 1))[, c(1, 16, 17, 18, 19)]
FPKM.10.WT.KO.FC <- (Count %>% filter(RHH001 >= 10 | RHH002 >= 10 | RHH003 >= 10 | RHH004 >= 10 | RHH005 >= 10 | RHH006 >= 10 | RHH007 >= 10 | RHH008 >= 10))[, c(1, 16, 17, 18, 19)]
p.data <- FPKM.1.WT.KO.FC
p.data <- merge(p.data, All.Genes, by.x = "GeneID", by.y = "V6", all.x = T)
p.data[, "Log2WTFC"] <- log2(p.data$MaxFCWT)
p.data[, "Log2KOFC"] <- log2(p.data$MaxFCKO)
p.data$MaxTimeWT <- factor(p.data$MaxTimeWT)
p.data$MaxTimeKO <- factor(p.data$MaxTimeKO)
add.point <- p.data %>% filter(p.data$V7 %in% mark.genes)
wt.point <- p.data %>% filter(Log2WTFC > 5 & Log2KOFC < 2)
ko.point <- p.data %>% filter(Log2WTFC < 2 & Log2KOFC > 5)
all.important.point <- rbind(add.point, ko.point, wt.point)
# write.table(all.important.point, file = "E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/GeneExpressionFoldChangeInWTandKO_FPKM10_logFC_W24h_LimitLog2-15.txt", quote = F, row.names = F, col.names = T, sep = "\t")
p <- ggplot(add.point, aes(x = Log2WTFC, y = Log2KOFC, label = V7)) + geom_point(size = 6, alpha = 0.7)
# p <- p + geom_label()
# p <- ggplot(p.data, aes(x = Rank, y = Log2WTFC, color = KOColor)) + geom_point(size = 3)
# p <- p + scale_color_gradient(low = "white", high = "black")
p <- p + scale_color_manual(breaks = c(1:3), values = c("green", "blue","red"), labels = c("W5FUT00", "W5FUT09", "W5FUT24"))
p <- p + scale_x_continuous(limits = c(0, 15))
p <- p + scale_y_continuous(limits = c(0, 15))
p <- p + theme(axis.text = element_text(size = 55))
p <- p + theme(legend.title = element_text(size = 40))
p <- p + theme(legend.key.size = unit(0.5, "inches"), legend.text = element_text(size = 30))
p <- p + theme(strip.text = element_text(size = 40))
p <- p + theme(plot.title = element_text(hjust = 0.5, size = 50))
p <- p + theme(axis.title = element_text(hjust = 0.5, size = 75))
p <- p + theme(panel.background = element_blank(), panel.border = element_rect(color = "black", linetype = "solid", size = 2, fill = NA))
p <- p + geom_vline(xintercept= log2(2.5))
p <- p + geom_hline(yintercept= log2(2.5))
p <- p + geom_vline(xintercept= log2(2))
p <- p + geom_hline(yintercept= log2(2))
png(paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM1_logFC_W24h_LimitLog2-15_add.png", 1400, 1200)
)
png(paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM1_logFC_W24h_LimitLog2-15_add.png"), 1400, 1200)
print(p)
dev.off()
# write.table(all.important.point, file = "E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/GeneExpressionFoldChangeInWTandKO_FPKM10_logFC_W24h_LimitLog2-15.txt", quote = F, row.names = F, col.names = T, sep = "\t")
p <- ggplot(p.data, aes(x = Log2WTFC, y = Log2KOFC, label = V7)) + geom_point(size = 6, alpha = 0.7)
# p <- p + geom_label()
# p <- ggplot(p.data, aes(x = Rank, y = Log2WTFC, color = KOColor)) + geom_point(size = 3)
# p <- p + scale_color_gradient(low = "white", high = "black")
p <- p + scale_color_manual(breaks = c(1:3), values = c("green", "blue","red"), labels = c("W5FUT00", "W5FUT09", "W5FUT24"))
p <- p + scale_x_continuous(limits = c(0, 15))
p <- p + scale_y_continuous(limits = c(0, 15))
p <- p + theme(axis.text = element_text(size = 55))
p <- p + theme(legend.title = element_text(size = 40))
p <- p + theme(legend.key.size = unit(0.5, "inches"), legend.text = element_text(size = 30))
p <- p + theme(strip.text = element_text(size = 40))
p <- p + theme(plot.title = element_text(hjust = 0.5, size = 50))
p <- p + theme(axis.title = element_text(hjust = 0.5, size = 75))
p <- p + theme(panel.background = element_blank(), panel.border = element_rect(color = "black", linetype = "solid", size = 2, fill = NA))
p <- p + geom_vline(xintercept= log2(2.5))
p <- p + geom_hline(yintercept= log2(2.5))
p <- p + geom_vline(xintercept= log2(2))
p <- p + geom_hline(yintercept= log2(2))
png(paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM1_logFC_W24h_LimitLog2-15_add.png"), 1400, 1200)
print(p)
dev.off()
View(p.data)
p <- ggplot(p.data, aes(x = Log2WTFC, y = Log2KOFC, color = MaxTimeKO)) + geom_point(size = 6, alpha = 0.7)
# p <- ggplot(p.data, aes(x = Rank, y = Log2WTFC, color = KOColor)) + geom_point(size = 3)
# p <- p + scale_color_gradient(low = "white", high = "black")
p <- p + scale_color_manual(breaks = c(1:3), values = c("green", "blue","red"), labels = c("W5FUT00", "W5FUT09", "W5FUT24"))
p <- p + scale_x_continuous(limits = c(0, 3))
p <- p + scale_y_continuous(limits = c(0, 3))
p <- p + theme(axis.text = element_text(size = 55))
p <- p + theme(legend.title = element_text(size = 40))
p <- p + theme(legend.key.size = unit(0.5, "inches"), legend.text = element_text(size = 30))
p <- p + theme(strip.text = element_text(size = 40))
p <- p + theme(plot.title = element_text(hjust = 0.5, size = 50))
p <- p + theme(axis.title = element_text(hjust = 0.5, size = 75))
p <- p + theme(panel.background = element_blank(), panel.border = element_rect(color = "black", linetype = "solid", size = 2, fill = NA))
p <- p + geom_vline(xintercept= log2(2.5))
p <- p + geom_hline(yintercept= log2(2.5))
p <- p + geom_vline(xintercept= log2(2))
p <- p + geom_hline(yintercept= log2(2))
print(p)
png(paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM1_logFC_W24h_LimitLog2-3_ColorKO.png"), 1400, 1200)
print(p)
dev.off()
samples <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/samplesWithout24h.txt", header = T)
samples <- read.table(paste0(Target.Dir, "samplesWithout24h.txt"), header = T)
WCount <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/RawGeneResult/AllGenes.txt", header = T) %>% setNames("GeneID")
for( RHH in samples$LIB )
{
GeneResultFile = paste0("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/RawGeneResult/", RHH, ".genes.results")
FPKM = read.table(GeneResultFile, header=T)[,c(1, 7)] %>% setNames(c("GeneID", RHH))
WCount = merge(FPKM, WCount, all.x = T, all.y = T)
}
for( RHH in samples$LIB )
{
GeneResultFile = paste0(Target.Dir, RHH, ".genes.results")
FPKM = read.table(GeneResultFile, header=T)[,c(1, 7)] %>% setNames(c("GeneID", RHH))
WCount = merge(FPKM, WCount, all.x = T, all.y = T)
}
# WT Fold Change
WT.LIB.Vec <- c("RHH006", "RHH007")
WT.Control <- "RHH005"
KO.LIB.Vec <- c("RHH002", "RHH003")
KO.Control <- "RHH001"
for( LIB in WT.LIB.Vec )
{
WCount[, paste0(LIB, "FCOver", WT.Control)] <- apply(WCount, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[WT.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
for( LIB in KO.LIB.Vec )
{
WCount[, paste0(LIB, "FCOver", KO.Control)] <- apply(WCount, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[KO.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
for( LIB in WT.LIB.Vec )
{
WCount[, paste0(LIB, "FCOver", WT.Control)] <- apply(WCount, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[WT.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
View(WCount)
WCount <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/RawGeneResult/AllGenes.txt", header = T) %>% setNames("GeneID")
for( RHH in samples$LIB )
{
GeneResultFile = paste0(Target.Dir, RHH, ".genes.results")
FPKM = read.table(GeneResultFile, header=T)[,c(1, 7)] %>% setNames(c("GeneID", RHH))
WCount = merge(FPKM, WCount, all.x = T, all.y = T)
}
View(WCount)
# WT Fold Change
WT.LIB.Vec <- c("RHH006", "RHH007")
WT.Control <- "RHH005"
KO.LIB.Vec <- c("RHH002", "RHH003")
KO.Control <- "RHH001"
for( LIB in WT.LIB.Vec )
{
WCount[, paste0(LIB, "FCOver", WT.Control)] <- apply(WCount, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[WT.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
for( LIB in KO.LIB.Vec )
{
WCount[, paste0(LIB, "FCOver", KO.Control)] <- apply(WCount, 1, function(x){
Treat <- as.numeric(x[LIB]) + 0.01
Control <- as.numeric(x[KO.Control]) + 0.01
if(Treat > Control)
{
return(Treat/Control)
}
else
{
return(-(Control/Treat))
}
})
}
WCount[, 12] <- apply(WCount, 1, function(x){
WT.MAX.FC <- max(abs(as.numeric(x[c("RHH006FCOverRHH005","RHH007FCOverRHH005")])))
return(WT.MAX.FC)
})
WCount[, 13] <- apply(WCount, 1, function(x){
KO.MAX.FC <- max(abs(as.numeric(x[c("RHH002FCOverRHH001","RHH003FCOverRHH001")])))
return(KO.MAX.FC)
})
names(WCount)[12:13] <- c("MaxFCWT","MaxFCKO")
FPKM.1.WT.KO.FC <- (WCount %>% filter(RHH001 >= 1 | RHH002 >= 1 | RHH003 >= 1 | RHH005 >= 1 | RHH006 >= 1 | RHH007 >= 1))
FPKM.10.WT.KO.FC <- (WCount %>% filter(RHH001 >= 10 | RHH002 >= 10 | RHH003 >= 10 | RHH005 >= 10 | RHH006 >= 10 | RHH007 >= 10 ))
FPKM.1.WT.KO.FC.Sorted.By.WT <- FPKM.1.WT.KO.FC[rev(order(FPKM.1.WT.KO.FC$MaxFCWT)), ]
FPKM.10.WT.KO.FC.Sorted.By.WT <- FPKM.10.WT.KO.FC[rev(order(FPKM.10.WT.KO.FC$MaxFCWT)), ]
FPKM.1.WT.KO.FC.Sorted.By.WT[, 4] <- seq_len(nrow(FPKM.1.WT.KO.FC.Sorted.By.WT))
FPKM.10.WT.KO.FC.Sorted.By.WT[, 4] <- seq_len(nrow(FPKM.10.WT.KO.FC.Sorted.By.WT))
## scatter plot.
p.data <- FPKM.10.WT.KO.FC
p.data <- merge(p.data, All.Genes, by.x = "GeneID", by.y = "V6", all.x = T)
p.data[, "Log2WTFC"] <- log2(p.data$MaxFCWT)
p.data[, "Log2KOFC"] <- log2(p.data$MaxFCKO)
add.point <- p.data %>% filter(p.data$V7 %in% mark.genes)
wt.point <- p.data %>% filter(Log2WTFC > 5 & Log2KOFC < 2)
ko.point <- p.data %>% filter(Log2WTFC < 2 & Log2KOFC > 5)
all.important.point <- rbind(add.point, ko.point, wt.point)
p.data[, "Cate"] <- apply(p.data, 1, function(x){
print(x["Log2WTFC"])
if(as.numeric(x["Log2WTFC"]) <= log2(2) && as.numeric(x["Log2KOFC"]) >= log2(2))
{
return(1)
}
else if(as.numeric(x["Log2WTFC"]) >= log2(2) && as.numeric(x["Log2KOFC"]) <= log2(2))
{
return(3)
}
else if(as.numeric(x["Log2WTFC"]) >= log2(2) && as.numeric(x["Log2KOFC"]) >= log2(2))
{
return(2)
}
else
{
return(4)
}
})
p.data$Cate <- factor(p.data$Cate)
p <- ggplot(p.data, aes(x = Log2WTFC, y = Log2KOFC, color = Cate)) + geom_point(size = 6)
p <- p + scale_color_manual(breaks = c(1:4), values = c("green", "blue","red", "black"))
p <- p + scale_x_continuous(limits = c(0, 15))
p <- p + scale_y_continuous(limits = c(0, 15))
p <- p + theme(axis.text = element_text(size = 55))
p <- p + theme(legend.title = element_text(size = 40))
p <- p + theme(legend.key.size = unit(0.5, "inches"), legend.text = element_text(size = 30))
p <- p + theme(strip.text = element_text(size = 40))
p <- p + theme(plot.title = element_text(hjust = 0.5, size = 50))
p <- p + theme(axis.title = element_text(hjust = 0.5, size = 75))
p <- p + theme(panel.background = element_blank(), panel.border = element_rect(color = "black", linetype = "solid", size = 2, fill = NA))
p <- p + geom_vline(xintercept= log2(2.5))
p <- p + geom_hline(yintercept= log2(2.5))
p <- p + geom_vline(xintercept= log2(2))
p <- p + geom_hline(yintercept= log2(2))
png(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2_WithCateColor_limit_15.png", 1400, 1200)
png(paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2_WithCateColor_limit_15.png"), 1400, 1200)
print(p)
dev.off()
write.table(p.data, paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2_WithCateColorTable.tsv"), row.names = F, col.names = T, sep ="\t", quote = F)
Cate.Stat <- as.data.frame(table(p.data$Cate))
write.table(Cate.Stat, paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2_WithCateColorTable.stat"), row.names = F, col.names = T, sep ="\t", quote = F)
# write.table(all.important.point, file = "E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/GeneExpressionFoldChangeInWTandKO_FPKM10_logFC_W24h_LimitLog2-15.txt", quote = F, row.names = F, col.names = T, sep = "\t")
# p <- ggplot(p.data, aes(x = Log2WTFC, y = Log2KOFC, label = V7)) + geom_point(size = 6, alpha = 0.7)
# p <- p + geom_label()
# p <- ggplot(p.data, aes(x = Rank, y = Log2WTFC, color = KOColor)) + geom_point(size = 3)
# p <- p + scale_color_gradient(low = "white", high = "black")
# scatter plot without color
Chosed.Fold.Change <- 2.5
p.data[, "Cate"] <- apply(p.data, 1, function(x){
print(x["Log2WTFC"])
if(as.numeric(x["Log2WTFC"]) <= log2(Chosed.Fold.Change) && as.numeric(x["Log2KOFC"]) >= log2(Chosed.Fold.Change))
{
return(1)
}
else if(as.numeric(x["Log2WTFC"]) >= log2(Chosed.Fold.Change) && as.numeric(x["Log2KOFC"]) <= log2(Chosed.Fold.Change))
{
return(3)
}
else if(as.numeric(x["Log2WTFC"]) >= log2(Chosed.Fold.Change) && as.numeric(x["Log2KOFC"]) >= log2(Chosed.Fold.Change))
{
return(2)
}
else
{
return(4)
}
})
p.data$Cate <- factor(p.data$Cate)
p <- ggplot(p.data, aes(x = Log2WTFC, y = Log2KOFC, color = Cate)) + geom_point(size = 6)
p <- p + scale_color_manual(breaks = c(1:4), values = c("green", "blue","red", "black"))
p <- p + scale_x_continuous(limits = c(0, 15))
p <- p + scale_y_continuous(limits = c(0, 15))
p <- p + theme(axis.text = element_text(size = 55))
p <- p + theme(legend.title = element_text(size = 40))
p <- p + theme(legend.key.size = unit(0.5, "inches"), legend.text = element_text(size = 30))
p <- p + theme(strip.text = element_text(size = 40))
p <- p + theme(plot.title = element_text(hjust = 0.5, size = 50))
p <- p + theme(axis.title = element_text(hjust = 0.5, size = 75))
p <- p + theme(panel.background = element_blank(), panel.border = element_rect(color = "black", linetype = "solid", size = 2, fill = NA))
p <- p + geom_vline(xintercept= log2(2.5))
p <- p + geom_hline(yintercept= log2(2.5))
p <- p + geom_vline(xintercept= log2(2))
p <- p + geom_hline(yintercept= log2(2))
png(paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2.5_WithCateColor_limit_15.png"), 1400, 1200)
print(p)
dev.off()
write.table(p.data, paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2.5_WithCateColorTable.tsv"), row.names = F, col.names = T, sep ="\t", quote = F)
Cate.Stat <- as.data.frame(table(p.data$Cate))
write.table(Cate.Stat, paste0(Target.Dir, "GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2.5_WithCateColorTable.stat"), row.names = F, col.names = T, sep ="\t", quote = F)
View(p.data)
# check Rep1 and Rep2
Rep2.Cate.3 <- p.data %>% filter(Cate == "3")
View(Rep2.Cate.3)
Rep1.Cate.3 <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2.5_WithCateColorTable.tsv")
View(Rep1.Cate.3)
Rep1.Cate.3 <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2.5_WithCateColorTable.tsv", header = T)
View(Rep1.Cate.3)
Rep1.Cate.3 <- read.table("E:/P53AnalysisByJK/DEG/RNA-seqGeneResultRep1/GeneExpressionFoldChangeInWTandKO_FPKM10_Log2_Line2.5_WithCateColorTable.tsv", header = T) %>% filter(Cate == "3")
View(Rep2.Cate.3)
View(Rep1.Cate.3)
View(Rep2.Cate.3)
View(Rep1.Cate.3)
View(Rep1.Cate.3)
View(Rep2.Cate.3)
